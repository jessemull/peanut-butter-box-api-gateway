service: peanut-butter-box-backend
  
configValidationMode: error

custom:
  dynamodb:
    stages:
      - dev
  tableName: 'users-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: src/index.handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}
  getHealthcheck:
    handler: src/index.handler
    events:
      - http: 'GET /healthcheck/{proxy+}'
  getUsers:
    handler: src/index.handler
    events:
      - http: 'GET /users'
  getUser:
    handler: src/index.handler
    events:
      - http: 
          path: users/{id}/{proxy+}
          method: get
          request: 
            parameters: 
              paths: 
                id: true
  postUser:
    handler: src/index.handler
    events:
      - http: 'POST /users'
  putUser:
    handler: src/index.handler
    events:
      - http: 
          path: users/{id}
          method: put
          request: 
            parameters: 
              paths: 
                id: true
  deleteUser:
    handler: src/index.handler
    events:
      - http: 
          path: users/{id}
          method: delete
          request: 
            parameters: 
              paths: 
                id: true

plugins:
  - serverless-finch
  - serverless-plugin-typescript
  - serverless-offline

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}